#define CONNECTION 1
#include "btio.nxc"

#define BT_CONN     1
task main()
{
  CommBTConnectionType args;
  args.Name = "courronne"; // whatever the slave NXT's name is
  args.ConnectionSlot = CONNECTION; // this is the desired connection slot (the above code uses 1)
  args.Action = TRUE; // could use some #define with a non-zero value to connect.  0 == disconnect
  if(!BluetoothStatus(CONNECTION)==NO_ERR)
  {
    SysCommBTConnection(args); // try to connect.
    for (int i = 0; i < 2000; i++) {
      NumOut(0, LCD_LINE3, args.Result);
      Wait(1);
    }
//    Wait(5000); // let the connection get created
    if (args.Result == LDR_SUCCESS)
    {
      // we are connected
      TextOut(0, LCD_LINE1, "success");
    }
    else {
      TextOut(0, LCD_LINE1, "failure");
      NumOut(0, LCD_LINE2, args.Result);
    }
  }
    TextOut(0, LCD_LINE3, "!!");
int i=0;
    CommBTWriteType args2;
    args2.Connection = 1;
    byte b= "x12";
    args2.Buffer= "abc";
    for (i=0; i<1; i++){
    SysCommBTWrite(args2);
    if (args2.Result==STAT_COMM_PENDING){
	TextOut(0, LCD_LINE2, "write done");
	}
    else {
	TextOut(0,LCD_LINE4, "fail");
	}
	Wait(1000);
}

    while( !BTCommCheck(BT_CONN) ) {
         TextOut(0, LCD_LINE1, "No BT connection");
         Wait(1000);
    }

    // PlayTone(262, 400);

    TextOut(0, LCD_LINE1, "Connected!");

    string msg = BTReceiveMessage (BT_CONN, 0, 1);
    int j=0;
    while (StrLen(msg) < 3){
    TextOut(0, LCD_LINE2, "msg "+msg);
    NumOut(0, LCD_LINE1,j);
    string msg = BTReceiveMessage (BT_CONN, 0, 1);
	j++;
    }

}

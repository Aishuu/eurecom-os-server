#include "btio.nxc"

#define CONNECTION  1
#define BT_CONN     1
#define SERV_NAME   "aishuu-laptop"

task main() {
    CommBTConnectionType args;
    args.Name = SERV_NAME;              // whatever the slave NXT's name is
    args.ConnectionSlot = CONNECTION;   // this is the desired connection slot (the above code uses 1)
    args.Action = TRUE;                 // could use some #define with a non-zero value to connect.  0 == disconnect

    if (BluetoothStatus(CONNECTION) != NO_ERR) {
        SysCommBTConnection(args);      // try to connect.
        TextOut(0, LCD_LINE1, "Conn Trying...");

        // Wait until operation has completed
        while (args.Result == LDR_INPROGRESS) {
            NumOut(0, LCD_LINE2, args.Result);
            Wait (100);
        }

        if (args.Result == LDR_SUCCESS) {
            // we are connected
            TextOut(0, LCD_LINE1, "Conn Success! ");
            TextOut(0, LCD_LINE2, "   ");

            // Wait some time if server connection is manual
            Wait (10000);
        } else {
            TextOut(0, LCD_LINE1, "Conn Failed   ");
            NumOut(0, LCD_LINE2, args.Result);
        }
    }

    // Wait for START message
    TextOut(0, LCD_LINE2, "Waiting Msg...");
    string msg = BTReceiveMessage (BT_CONN, 0, 1);
    for (int j=0; StrLen(msg) < 5; j++) {
        TextOut(0, LCD_LINE2, "Msg: " + msg);
        NumOut(0, LCD_LINE3, j);
        msg = msg + BTReceiveMessage (BT_CONN, 0, 1);
        TextOut(0, LCD_LINE2, "Msg: " + msg);
    }

    Wait (5000);

    CommBTWriteType args2;
    args2.Connection = 1;
    args2.Buffer= "Hello from NXT";

    SysCommBTWrite(args2);
    TextOut(0, LCD_LINE2, "Trying to write");
    while (BluetoothStatus (CONNECTION) == STAT_COMM_PENDING)
        Wait (10);

    if (BluetoothStatus (CONNECTION) == NO_ERR)
        TextOut(0, LCD_LINE2, "Write Done        ");
    else
        TextOut(0, LCD_LINE2, "Write Failed      ");

    Wait (5000);
}
